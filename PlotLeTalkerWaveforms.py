from matplotlib import pyplot as plt
import numpy as np
from scipy import signal


def zeroline(ls="-", color="k", **kwargs):
    plt.axhline(0, ls=ls, color=color, **kwargs)


def PlotLeTalkerWaveforms(r, p, Fs, hwaves=None, htract=None):
    # Plot some of the waveforms generated by the simulation
    # B. Story
    # 10.25.11

    N = len(r.ug)
    N2 = round(N / 2)

    t = np.arange(N) / Fs * 1000  # in ms

    plt.figure()

    # set(gca,'PlotBoxAspectRatio',[1, 1, 1])

    # -------Plot output pressure (audio)-----------
    plt.subplot(5, 1, 1)
    plt.plot(t, r.po, "-k", lw=1)
    zeroline(ls="-", color="k")

    if max(r.po) > 0 and min(r.po) < 0:
        plt.axis([t[0], t[-1], 1.1 * min(r.po), 1.1 * max(r.po)])
    else:
        plt.axis([t[0], t[-1], -0.1, 0.1])

    # set(gca,'Box','off','YTick',[0],size=12,weight='bold')
    v = plt.axis()
    plt.text(-0.0025 * N, (v[2] + v[3]) / 2, "Po", size=12, weight="bold")

    if r.f0 is not None:
        plt.title(f"F0 = {r.f0:0.2f} Hz")

    # -------Plot subglottal and intraglottal pressure -----------
    plt.subplot(5, 1, 2)

    [b, a] = signal.butter(2, 30 / (44100 / 2))
    plt.plot(t, r.ps, "-k", lw=1)
    plt.plot(t, signal.filtfilt(b, a, r.ps), "-r")
    # p_intrag = ((r.f1*p.T*p.L)+(r.f2*p.T*p.L))/2
    p_intrag = (r.f1 + r.f2) / 2 * 2 * p.T * p.L
    plt.plot(t, p_intrag, "-b")
    plt.axis([t[0], t[-1], min(p_intrag) - 1000, max(r.ps) + 1000])
    zeroline()
    # set(gca,'Box','off','YTick',[0],size=12,weight='bold')
    v = plt.axis()
    plt.text(-0.0025 * N, (v[2] + v[3]) / 2, "Ps & Pg", size=12, weight="bold")
    h = plt.legend(["Ps", "Ps (smoothed)", "Pg"])

    # -------Plot glottal flow -----------
    plt.subplot(5, 1, 3)
    plt.plot(t, r.ug, "-k", lw=1)
    plt.axis([t[0], t[-1], 0, 1.1 * max(r.ug)])
    zeroline()
    # set(gca,'Box','off','YTick',[0],size=12,weight='bold')
    v = plt.axis()
    plt.text(-0.0025 * N, (v[2] + v[3]) / 2, "Ug", size=12, weight="bold")
    plt.title(f"Max Glottal Flow = {round(max(r.ug))} cm³/s")

    # -------Plot glottal area -----------
    plt.subplot(5, 1, 4)
    plt.plot(t, r.ga, "-k", lw=1)
    plt.axis([t[0], t[-1], 0, 1.1 * max(r.ga)])
    zeroline()
    # set(gca,'Box','off','YTick',[0],size=12,weight='bold')
    v = plt.axis()
    plt.text(-0.0025 * N, (v[2] + v[3]) / 2, "Ag", size=12, weight="bold")

    plt.title(f"Max Glottal Area = {round(100*max(r.ga))/100} cm²")

    #
    # -------Plot displacement of lower (x1), upper (x2), and body (xb) masses -----------
    plt.subplot(5, 1, 5)
    plt.plot(t, r.x1, "-b", lw=1)
    plt.plot(t, r.x2, "-r", lw=1)
    plt.plot(t, r.xb + 0.2, "-k", lw=1)
    plt.axis([t[0], t[-1], -0.1, 1.1 * max(r.xb) + 0.2])
    zeroline()
    # set(gca,'Box','off','YTick',[0],size=12,weight='bold')
    v = plt.axis()
    plt.text(-0.0025 * N, (v[2] + v[3]) / 2, "Disp.", size=12, weight="bold")

    plt.xlabel("Time (ms)")
    #

    # -===============================
    # Open a new figure and plot the trachea and vocal tract area functions

    plt.figure()

    dx = 0.396825
    x = dx * np.arange(1, 45)
    if p.SUB == 1 and p.SUPRA == 1:
        plt.plot(x, p.ar[:44], "-b", lw=2)
        x = dx * np.arange(1, 33)
        x = x - x[-1]
        plt.plot(x, p.ar[44:], "-r", lw=2)
        plt.plot([0, 0], [0, 10], "-k")
    elif p.SUB == 1 and p.SUPRA == 0:
        plt.plot(x, 0 * p.ar[:44], "-b", lw=2)
        x = dx * np.arange(1, 33)
        x = x - x[-1]
        plt.plot(x, p.ar[44:], "-r", lw=2)
        plt.plot([0, 0], [0, 10], "-k")
    elif p.SUB == 0 and p.SUPRA == 1:
        plt.plot(x, p.ar[:44], "-b", lw=2)
        x = dx * np.arange(1, 33)
        x = x - x[-1]
        plt.plot(x, 0 * p.ar[44:], "-r", lw=2)
        plt.plot([0, 0], [0, 10], "-k")
    else:
        plt.plot(x, 0 * p.ar[:44], "-b", lw=2)
        x = dx * np.arange(1, 33)
        x = x - x[-1]
        plt.plot(x, 0 * p.ar[44:], "-r", lw=2)
        plt.plot([0, 0], [0, 10], "-k")

    # set(gca,'PlotBoxAspectRatio',[1 .6 1])
    # set(gca,'XTick',[-12:2:18])
    # set(gca,'FontSize',14,'FontWeight','bold')
    plt.xlabel("Distance from glottis (cm)")
    plt.ylabel("Area (cm²)")
    plt.axis([-14, 18, 0, 8])
    plt.text(-10, 7, "Trachea", size=14)
    plt.text(8, 7, "Vocal tract", size=14)
    plt.grid(True)

    plt.show()
